2020-07-24 02:07:01,749 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:07:01,750 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:07:01,751 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:07:01,752 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:07:01,753 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:07:01,754 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:07:01,755 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:07:01,755 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:07:01,774 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 02:07:01,774 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 02:07:01,776 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 02:07:01,777 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 02:07:01,778 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 02:07:01,779 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 02:07:01,780 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 02:07:01,781 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 02:09:38,974 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:09:38,976 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:09:38,979 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:09:38,980 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:09:38,981 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:09:38,982 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:09:38,983 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:09:38,984 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:09:39,003 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 02:09:39,004 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 02:09:39,006 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 02:09:39,007 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 02:09:39,008 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 02:09:39,009 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 02:09:39,011 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 02:09:39,012 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 02:09:42,933 - tornado.access - INFO - 172.19.0.1 200 GET / (172.19.0.1) 70.39ms 2020-07-24 02:09:42
[I 200724 02:09:42 application:168] 172.19.0.1 200 GET / (172.19.0.1) 70.39ms 2020-07-24 02:09:42
2020-07-24 02:09:43,008 - tornado.access - INFO - 172.19.0.1 200 GET /static/css/justified-nav.css?v=5e17f589a81fc6d1a1013736cfb2bb6b (172.19.0.1) 12.43ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/css/justified-nav.css?v=5e17f589a81fc6d1a1013736cfb2bb6b (172.19.0.1) 12.43ms 2020-07-24 02:09:43
2020-07-24 02:09:43,024 - tornado.access - INFO - 172.19.0.1 200 GET /static/css/bootstrap.css?v=3e620def14f77fe4e2fbe034aee149f4 (172.19.0.1) 28.68ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/css/bootstrap.css?v=3e620def14f77fe4e2fbe034aee149f4 (172.19.0.1) 28.68ms 2020-07-24 02:09:43
2020-07-24 02:09:43,038 - tornado.access - INFO - 172.19.0.1 200 GET /static/css/pow.css?v=4242b69613cabcb16f563eb793b40ead (172.19.0.1) 6.86ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/css/pow.css?v=4242b69613cabcb16f563eb793b40ead (172.19.0.1) 6.86ms 2020-07-24 02:09:43
2020-07-24 02:09:43,069 - tornado.access - INFO - 172.19.0.1 200 GET /static/css/prism.css?v=4f1603dba62f680aa67f2ceb949f4985 (172.19.0.1) 36.40ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/css/prism.css?v=4f1603dba62f680aa67f2ceb949f4985 (172.19.0.1) 36.40ms 2020-07-24 02:09:43
2020-07-24 02:09:43,083 - tornado.access - INFO - 172.19.0.1 200 GET /static/js/prism.js?v=cde2f2733e7cd8e79a370f846c9e48a0 (172.19.0.1) -9.22ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/js/prism.js?v=cde2f2733e7cd8e79a370f846c9e48a0 (172.19.0.1) -9.22ms 2020-07-24 02:09:43
2020-07-24 02:09:43,102 - tornado.access - INFO - 172.19.0.1 200 GET /static/js/tether.min.js?v=dbdaedc86c547ce682ae96274b172997 (172.19.0.1) 8.46ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/js/tether.min.js?v=dbdaedc86c547ce682ae96274b172997 (172.19.0.1) 8.46ms 2020-07-24 02:09:43
2020-07-24 02:09:43,111 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_logo_300.png?v=272dace93f3ff9bb7e293616e9a1c1cf (172.19.0.1) 17.33ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/images/pow_logo_300.png?v=272dace93f3ff9bb7e293616e9a1c1cf (172.19.0.1) 17.33ms 2020-07-24 02:09:43
2020-07-24 02:09:43,119 - tornado.access - INFO - 172.19.0.1 200 GET /static/js/ie10-viewport-bug-workaround.js?v=1a04de0800b8ca8a23f448875c1f6612 (172.19.0.1) 15.46ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/js/ie10-viewport-bug-workaround.js?v=1a04de0800b8ca8a23f448875c1f6612 (172.19.0.1) 15.46ms 2020-07-24 02:09:43
2020-07-24 02:09:43,129 - tornado.access - INFO - 172.19.0.1 200 GET /static/js/holder.min.js?v=6266d87979b32f717d298f7adf36984a (172.19.0.1) 24.97ms 2020-07-24 02:09:43
[I 200724 02:09:43 application:168] 172.19.0.1 200 GET /static/js/holder.min.js?v=6266d87979b32f717d298f7adf36984a (172.19.0.1) 24.97ms 2020-07-24 02:09:43
2020-07-24 02:09:44,339 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 7.85ms 2020-07-24 02:09:44
[I 200724 02:09:44 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 7.85ms 2020-07-24 02:09:44
2020-07-24 02:09:51,017 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.16ms 2020-07-24 02:09:51
[I 200724 02:09:51 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.16ms 2020-07-24 02:09:51
2020-07-24 02:09:51,019 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 02:09:51
[I 200724 02:09:51 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 02:09:51
2020-07-24 02:09:51,059 - sqlalchemy.engine.base.Engine - INFO - SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
[I 200724 02:09:51 base:1341] SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2020-07-24 02:09:51,062 - sqlalchemy.engine.base.Engine - INFO - ()
[I 200724 02:09:51 base:1342] ()
2020-07-24 02:09:51,064 - sqlalchemy.engine.base.Engine - INFO - SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
[I 200724 02:09:51 base:1341] SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2020-07-24 02:09:51,066 - sqlalchemy.engine.base.Engine - INFO - ()
[I 200724 02:09:51 base:1342] ()
2020-07-24 02:09:51,069 - sqlalchemy.engine.base.Engine - INFO - BEGIN (implicit)
[I 200724 02:09:51 base:730] BEGIN (implicit)
2020-07-24 02:09:51,074 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 02:09:51 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 02:09:51,075 - sqlalchemy.engine.base.Engine - INFO - ()
[I 200724 02:09:51 base:1240] ()
2020-07-24 02:09:51,087 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 71.95ms 2020-07-24 02:09:51
[I 200724 02:09:51 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 71.95ms 2020-07-24 02:09:51
2020-07-24 02:09:53,353 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.06ms 2020-07-24 02:09:53
[I 200724 02:09:53 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.06ms 2020-07-24 02:09:53
2020-07-24 02:09:53,356 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:09:53
[I 200724 02:09:53 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:09:53
2020-07-24 02:09:53,389 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 38.75ms 2020-07-24 02:09:53
[I 200724 02:09:53 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 38.75ms 2020-07-24 02:09:53
2020-07-24 02:09:58,550 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.07ms 2020-07-24 02:09:58
[I 200724 02:09:58 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.07ms 2020-07-24 02:09:58
2020-07-24 02:09:58,552 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:09:58
[I 200724 02:09:58 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:09:58
2020-07-24 02:09:58,582 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 33.89ms 2020-07-24 02:09:58
[I 200724 02:09:58 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 33.89ms 2020-07-24 02:09:58
2020-07-24 02:10:04,144 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.18ms 2020-07-24 02:10:04
[I 200724 02:10:04 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.18ms 2020-07-24 02:10:04
2020-07-24 02:10:04,146 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:10:04
[I 200724 02:10:04 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:10:04
2020-07-24 02:10:04,148 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 02:10:04 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 02:10:04,191 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.68ms 2020-07-24 02:10:04
[E 200724 02:10:04 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.68ms 2020-07-24 02:10:04
2020-07-24 02:12:45,614 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:12:45,615 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:12:45,616 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:12:45,617 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:12:45,617 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:12:45,618 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:12:45,619 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:12:45,619 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:12:45,631 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:12:45,634 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:12:45,652 - alembic.autogenerate.compare - INFO - Detected added table 'archivetbls'
2020-07-24 02:14:08,133 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:14:08,134 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:14:08,135 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:14:08,135 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:14:08,136 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:14:08,137 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:14:08,138 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:14:08,139 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:14:08,152 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:14:08,154 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:14:08,168 - alembic.runtime.migration - INFO - Running upgrade  -> 35cff3ff750a, added a archivetable model
2020-07-24 02:14:30,769 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:14:30,770 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:14:30,771 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:14:30,772 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:14:30,773 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:14:30,774 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:14:30,775 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:14:30,776 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:14:30,794 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 02:14:30,795 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 02:14:30,796 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 02:14:30,796 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 02:14:30,797 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 02:14:30,798 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 02:14:30,799 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 02:14:30,800 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 02:14:34,920 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.56ms 2020-07-24 02:14:34
[I 200724 02:14:34 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.56ms 2020-07-24 02:14:34
2020-07-24 02:14:34,923 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:14:34
[I 200724 02:14:34 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:14:34
2020-07-24 02:14:34,968 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 51.27ms 2020-07-24 02:14:34
[I 200724 02:14:34 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 51.27ms 2020-07-24 02:14:34
2020-07-24 02:14:35,770 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.41ms 2020-07-24 02:14:35
[I 200724 02:14:35 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.41ms 2020-07-24 02:14:35
2020-07-24 02:14:41,318 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.36ms 2020-07-24 02:14:41
[I 200724 02:14:41 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.36ms 2020-07-24 02:14:41
2020-07-24 02:14:41,320 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:14:41
[I 200724 02:14:41 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:14:41
2020-07-24 02:14:41,323 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 02:14:41 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 02:14:41,370 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 54.42ms 2020-07-24 02:14:41
[E 200724 02:14:41 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 54.42ms 2020-07-24 02:14:41
2020-07-24 02:15:13,800 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:15:13,801 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:15:13,801 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:15:13,802 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:15:13,803 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:15:13,804 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:15:13,805 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:15:13,806 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:15:13,820 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:15:13,822 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:15:25,758 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:15:25,760 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:15:25,761 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:15:25,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:15:25,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:15:25,765 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:15:25,766 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:15:25,767 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:15:25,790 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:15:25,794 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:15:25,805 - alembic.runtime.migration - INFO - Running downgrade 35cff3ff750a -> , added a archivetable model
2020-07-24 02:15:35,135 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:15:35,136 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:15:35,136 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:15:35,137 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:15:35,138 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:15:35,139 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:15:35,140 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:15:35,141 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:15:35,155 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:15:35,157 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:15:35,168 - alembic.runtime.migration - INFO - Running upgrade  -> 35cff3ff750a, added a archivetable model
2020-07-24 02:15:41,998 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:15:42,000 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:15:42,001 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:15:42,001 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:15:42,003 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:15:42,004 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:15:42,005 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:15:42,006 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:15:42,020 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:15:42,024 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:15:42,035 - alembic.runtime.migration - INFO - Running downgrade 35cff3ff750a -> , added a archivetable model
2020-07-24 02:16:39,283 - tornado.general - INFO - /workspace/scrat/conf/config.py modified; restarting server
[I 200724 02:16:39 autoreload:202] /workspace/scrat/conf/config.py modified; restarting server
2020-07-24 02:18:14,460 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:18:14,462 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:18:14,463 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:18:14,464 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:18:14,465 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:18:14,466 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:18:14,467 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:18:14,467 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:18:14,484 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 02:18:14,485 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 02:18:14,486 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 02:18:14,487 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 02:18:14,488 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 02:18:14,489 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 02:18:14,490 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 02:18:14,491 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 02:18:19,325 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:18:19,327 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:18:19,328 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:18:19,332 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:18:19,333 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:18:19,334 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:18:19,335 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:18:19,337 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:18:19,359 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:18:19,361 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:18:19,368 - alembic.runtime.migration - INFO - Running upgrade  -> 35cff3ff750a, added a archivetable model
2020-07-24 02:18:26,832 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:18:26,833 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:18:26,834 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:18:26,836 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:18:26,836 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:18:26,837 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:18:26,838 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:18:26,838 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:18:26,857 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:18:26,859 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:18:26,867 - alembic.runtime.migration - INFO - Running downgrade 35cff3ff750a -> , added a archivetable model
2020-07-24 02:18:45,498 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:18:45,499 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:18:45,500 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:18:45,502 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:18:45,503 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:18:45,504 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:18:45,505 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:18:45,506 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:18:45,525 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:18:45,527 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:18:45,536 - alembic.runtime.migration - INFO - Running upgrade  -> 35cff3ff750a, added a archivetable model
2020-07-24 02:18:52,220 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:18:52,221 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:18:52,222 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:18:52,225 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:18:52,226 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:18:52,227 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:18:52,227 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:18:52,228 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:18:52,256 - alembic.runtime.migration - INFO - Context impl SQLiteImpl.
2020-07-24 02:18:52,258 - alembic.runtime.migration - INFO - Will assume non-transactional DDL.
2020-07-24 02:18:52,266 - alembic.runtime.migration - INFO - Running downgrade 35cff3ff750a -> , added a archivetable model
2020-07-24 02:23:37,246 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:23:37,249 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:23:37,250 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:23:37,250 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:23:37,251 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:23:37,252 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:23:37,253 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:23:37,253 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:23:49,394 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:23:49,397 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:23:49,397 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:23:49,398 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:23:49,399 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:23:49,400 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:23:49,401 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:23:49,402 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:23:49,430 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:23:49,432 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:23:57,431 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:23:57,434 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:23:57,435 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:23:57,436 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:23:57,437 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:23:57,438 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:23:57,439 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:23:57,440 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:23:57,471 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:23:57,474 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:24:06,213 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:24:06,215 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:24:06,216 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:24:06,217 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:24:06,217 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:24:06,218 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:24:06,219 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:24:06,220 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:24:06,254 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:24:06,258 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:28:27,760 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:28:27,762 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:28:27,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:28:27,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:28:27,764 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:28:27,765 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:28:27,766 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:28:27,766 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:28:27,792 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:28:27,794 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:42:29,469 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:42:29,471 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:42:29,472 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:42:29,474 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:42:29,474 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:42:29,475 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:42:29,476 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:42:29,476 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:42:56,691 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:42:56,694 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:42:56,695 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:42:56,697 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:42:56,698 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:42:56,700 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:42:56,704 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:42:56,706 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:42:56,731 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:42:56,734 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:50:07,151 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:50:07,153 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:50:07,154 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:50:07,154 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:50:07,155 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:50:07,156 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:50:07,157 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:50:07,158 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:50:07,178 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:50:07,180 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:50:07,195 - alembic.autogenerate.compare - INFO - Detected added table 'archivetbls'
2020-07-24 02:50:34,091 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:50:34,092 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:50:34,093 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:50:34,095 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:50:34,096 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:50:34,096 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:50:34,097 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:50:34,098 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:50:34,123 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:50:34,126 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:50:34,139 - alembic.runtime.migration - INFO - Running upgrade  -> 32c6d424eb31, test
2020-07-24 02:54:20,436 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:54:20,438 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:54:20,438 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:54:20,439 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:54:20,440 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:54:20,441 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:54:20,441 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:54:20,442 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:54:20,469 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:54:20,472 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:54:24,982 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:54:24,983 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:54:24,984 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:54:24,985 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:54:24,986 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:54:24,987 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:54:24,990 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:54:24,992 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:54:25,018 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:54:25,021 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:54:25,031 - alembic.runtime.migration - INFO - Running downgrade 32c6d424eb31 -> , test
2020-07-24 02:54:33,081 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:54:33,082 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:54:33,083 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:54:33,084 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:54:33,085 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:54:33,085 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:54:33,086 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:54:33,087 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:54:33,110 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 02:54:33,113 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 02:54:33,123 - alembic.runtime.migration - INFO - Running upgrade  -> 32c6d424eb31, test
2020-07-24 02:55:46,463 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 02:55:46,464 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 02:55:46,465 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 02:55:46,466 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 02:55:46,466 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 02:55:46,467 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 02:55:46,468 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 02:55:46,469 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 02:55:46,486 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 02:55:46,487 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 02:55:46,488 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 02:55:46,489 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 02:55:46,490 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 02:55:46,491 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 02:55:46,492 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 02:55:46,493 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 02:56:12,944 - tornado.access - INFO - 172.19.0.1 304 GET / (172.19.0.1) 55.22ms 2020-07-24 02:56:12
[I 200724 02:56:12 application:168] 172.19.0.1 304 GET / (172.19.0.1) 55.22ms 2020-07-24 02:56:12
2020-07-24 02:56:21,394 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.60ms 2020-07-24 02:56:21
[I 200724 02:56:21 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.60ms 2020-07-24 02:56:21
2020-07-24 02:56:21,396 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:56:21
[I 200724 02:56:21 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:56:21
2020-07-24 02:56:21,435 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 44.25ms 2020-07-24 02:56:21
[I 200724 02:56:21 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 44.25ms 2020-07-24 02:56:21
2020-07-24 02:56:28,704 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.43ms 2020-07-24 02:56:28
[I 200724 02:56:28 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.43ms 2020-07-24 02:56:28
2020-07-24 02:56:28,706 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:56:28
[I 200724 02:56:28 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 02:56:28
2020-07-24 02:56:28,709 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 02:56:28 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 02:56:28,757 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 55.70ms 2020-07-24 02:56:28
[E 200724 02:56:28 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 55.70ms 2020-07-24 02:56:28
2020-07-24 02:56:40,465 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.77ms 2020-07-24 02:56:40
[I 200724 02:56:40 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.77ms 2020-07-24 02:56:40
2020-07-24 02:56:40,468 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 02:56:40
[I 200724 02:56:40 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 02:56:40
2020-07-24 02:56:40,514 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl (172.19.0.1) 51.87ms 2020-07-24 02:56:40
[I 200724 02:56:40 application:168] 172.19.0.1 304 GET /archivetbl (172.19.0.1) 51.87ms 2020-07-24 02:56:40
2020-07-24 02:56:42,854 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 3.06ms 2020-07-24 02:56:42
[I 200724 02:56:42 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 3.06ms 2020-07-24 02:56:42
2020-07-24 02:56:42,856 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:56:42
[I 200724 02:56:42 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 02:56:42
2020-07-24 02:56:42,888 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 37.15ms 2020-07-24 02:56:42
[I 200724 02:56:42 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 37.15ms 2020-07-24 02:56:42
2020-07-24 02:58:56,951 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.40ms 2020-07-24 02:58:56
[I 200724 02:58:56 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.40ms 2020-07-24 02:58:56
2020-07-24 02:58:56,953 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 02:58:56
[I 200724 02:58:56 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 02:58:56
2020-07-24 02:58:56,955 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 02:58:56 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 02:58:56,996 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 52.86ms 2020-07-24 02:58:56
[E 200724 02:58:56 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 52.86ms 2020-07-24 02:58:56
2020-07-24 02:59:16,195 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 1.87ms 2020-07-24 02:59:16
[I 200724 02:59:16 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 1.87ms 2020-07-24 02:59:16
2020-07-24 02:59:16,198 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 02:59:16
[I 200724 02:59:16 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 02:59:16
2020-07-24 02:59:16,200 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
    self._assert_active(prepared_ok=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 02:59:16 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
        self._assert_active(prepared_ok=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 02:59:16,238 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 45.05ms 2020-07-24 02:59:16
[E 200724 02:59:16 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 45.05ms 2020-07-24 02:59:16
2020-07-24 02:59:28,923 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
    self.session._autoflush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
    self.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
    subtransactions=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
    self.transaction = self.transaction._begin(nested=nested)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 02:59:28 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
        self.session._autoflush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
        self.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
        subtransactions=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
        self.transaction = self.transaction._begin(nested=nested)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 02:59:28,953 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 31.84ms 2020-07-24 02:59:28
[E 200724 02:59:28 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 31.84ms 2020-07-24 02:59:28
2020-07-24 03:00:32,769 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
    self.session._autoflush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
    self.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
    subtransactions=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
    self.transaction = self.transaction._begin(nested=nested)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 03:00:32 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
        self.session._autoflush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
        self.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
        subtransactions=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
        self.transaction = self.transaction._begin(nested=nested)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 03:00:32,806 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 39.01ms 2020-07-24 03:00:32
[E 200724 03:00:32 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 39.01ms 2020-07-24 03:00:32
2020-07-24 03:00:53,187 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.71ms 2020-07-24 03:00:53
[I 200724 03:00:53 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.71ms 2020-07-24 03:00:53
2020-07-24 03:00:53,189 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:00:53
[I 200724 03:00:53 application:175] 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:00:53
2020-07-24 03:00:53,195 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 9.96ms 2020-07-24 03:00:53
[I 200724 03:00:53 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 9.96ms 2020-07-24 03:00:53
2020-07-24 03:01:03,010 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.71ms 2020-07-24 03:01:03
[I 200724 03:01:03 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.71ms 2020-07-24 03:01:03
2020-07-24 03:01:03,012 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:01:03
[I 200724 03:01:03 application:175] 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:01:03
2020-07-24 03:01:03,015 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 6.68ms 2020-07-24 03:01:03
[I 200724 03:01:03 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 6.68ms 2020-07-24 03:01:03
2020-07-24 03:01:13,848 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
    self.session._autoflush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
    self.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
    subtransactions=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
    self.transaction = self.transaction._begin(nested=nested)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 03:01:13 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
        self.session._autoflush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
        self.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
        subtransactions=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
        self.transaction = self.transaction._begin(nested=nested)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 03:01:13,880 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 33.76ms 2020-07-24 03:01:13
[E 200724 03:01:13 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 33.76ms 2020-07-24 03:01:13
2020-07-24 03:01:31,637 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:01:31,638 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:01:31,639 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:01:31,640 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:01:31,640 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:01:31,641 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:01:31,642 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:01:31,643 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:01:31,668 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:01:31,672 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:01:35,489 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:01:35,489 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:01:35,490 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:01:35,491 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:01:35,491 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:01:35,492 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:01:35,493 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:01:35,494 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:01:35,518 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:01:35,520 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:01:35,530 - alembic.runtime.migration - INFO - Running downgrade 32c6d424eb31 -> , test
2020-07-24 03:01:56,327 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
    self.session._autoflush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
    self.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
    subtransactions=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
    self.transaction = self.transaction._begin(nested=nested)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 03:01:56 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
        self.session._autoflush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
        self.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
        subtransactions=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
        self.transaction = self.transaction._begin(nested=nested)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 03:01:56,366 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 41.89ms 2020-07-24 03:01:56
[E 200724 03:01:56 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 41.89ms 2020-07-24 03:01:56
2020-07-24 03:02:06,502 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.93ms 2020-07-24 03:02:06
[I 200724 03:02:06 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.93ms 2020-07-24 03:02:06
2020-07-24 03:02:06,505 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:02:06
[I 200724 03:02:06 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:02:06
2020-07-24 03:02:06,537 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl (172.19.0.1) 37.54ms 2020-07-24 03:02:06
[I 200724 03:02:06 application:168] 172.19.0.1 304 GET /archivetbl (172.19.0.1) 37.54ms 2020-07-24 03:02:06
2020-07-24 03:02:07,166 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.39ms 2020-07-24 03:02:07
[I 200724 03:02:07 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.39ms 2020-07-24 03:02:07
2020-07-24 03:02:09,571 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 1.89ms 2020-07-24 03:02:09
[I 200724 03:02:09 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 1.89ms 2020-07-24 03:02:09
2020-07-24 03:02:09,573 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:02:09
[I 200724 03:02:09 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:02:09
2020-07-24 03:02:09,608 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 39.19ms 2020-07-24 03:02:09
[I 200724 03:02:09 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 39.19ms 2020-07-24 03:02:09
2020-07-24 03:02:14,367 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.33ms 2020-07-24 03:02:14
[I 200724 03:02:14 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.33ms 2020-07-24 03:02:14
2020-07-24 03:02:14,371 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:02:14
[I 200724 03:02:14 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:02:14
2020-07-24 03:02:14,374 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:02:14 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:02:14,414 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.90ms 2020-07-24 03:02:14
[E 200724 03:02:14 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.90ms 2020-07-24 03:02:14
2020-07-24 03:03:10,414 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
    self.session._autoflush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
    self.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
    subtransactions=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
    self.transaction = self.transaction._begin(nested=nested)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 03:03:10 web:1792] Uncaught exception PUT /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3502, in __iter__
        self.session._autoflush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1617, in _autoflush
        self.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2619, in _flush
        subtransactions=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 953, in begin
        self.transaction = self.transaction._begin(nested=nested)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 317, in _begin
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 03:03:10,444 - tornado.access - ERROR - 172.19.0.1 500 PUT /archivetbl (172.19.0.1) 34.08ms 2020-07-24 03:03:10
[E 200724 03:03:10 application:168] 172.19.0.1 500 PUT /archivetbl (172.19.0.1) 34.08ms 2020-07-24 03:03:10
2020-07-24 03:29:26,266 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:29:26,267 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:29:26,268 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:29:26,269 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:29:26,270 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:29:26,271 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:29:26,271 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:29:26,272 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:29:26,302 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:29:26,304 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:29:46,163 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:29:46,163 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:29:46,164 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:29:46,165 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:29:46,166 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:29:46,167 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:29:46,167 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:29:46,168 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:29:46,199 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:29:46,202 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:29:47,760 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:29:47,762 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:29:47,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:29:47,763 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:29:47,764 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:29:47,765 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:29:47,766 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:29:47,767 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:29:47,791 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:29:47,794 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:29:47,807 - alembic.runtime.migration - INFO - Running upgrade  -> 32c6d424eb31, test
2020-07-24 03:29:50,650 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:29:50,651 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:29:50,651 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:29:50,652 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:29:50,653 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:29:50,654 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:29:50,655 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:29:50,656 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:29:50,682 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:29:50,684 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:29:50,707 - alembic.ddl.postgresql - INFO - Detected sequence named 'archivetbls_id_seq' as owned by integer column 'archivetbls(id)', assuming SERIAL and omitting
2020-07-24 03:30:00,411 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:30:00,412 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:30:00,413 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:30:00,413 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:30:00,414 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:30:00,415 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:30:00,416 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:30:00,417 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:30:00,443 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:30:00,445 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:30:03,345 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:30:03,346 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:30:03,347 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:30:03,347 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:30:03,348 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:30:03,349 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:30:03,350 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:30:03,351 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:30:03,377 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:30:03,379 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:30:03,398 - alembic.runtime.migration - INFO - Running upgrade 32c6d424eb31 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:30:05,832 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:30:05,833 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:30:05,834 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:30:05,835 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:30:05,835 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:30:05,836 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:30:05,837 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:30:05,838 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:30:05,866 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:30:05,868 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:30:05,896 - alembic.ddl.postgresql - INFO - Detected sequence named 'archivetbls_id_seq' as owned by integer column 'archivetbls(id)', assuming SERIAL and omitting
2020-07-24 03:30:21,291 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:30:21,292 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:30:21,293 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:30:21,293 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:30:21,294 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:30:21,295 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:30:21,296 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:30:21,297 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:30:21,316 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:30:21,316 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:30:21,318 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:30:21,319 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:30:21,320 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:30:21,321 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:30:21,322 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:30:21,322 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:30:26,822 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.25ms 2020-07-24 03:30:26
[I 200724 03:30:26 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.25ms 2020-07-24 03:30:26
2020-07-24 03:30:26,824 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:30:26
[I 200724 03:30:26 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:30:26
2020-07-24 03:30:26,884 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 64.28ms 2020-07-24 03:30:26
[I 200724 03:30:26 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 64.28ms 2020-07-24 03:30:26
2020-07-24 03:30:27,576 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 5.98ms 2020-07-24 03:30:27
[I 200724 03:30:27 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 5.98ms 2020-07-24 03:30:27
2020-07-24 03:30:33,287 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 3.28ms 2020-07-24 03:30:33
[I 200724 03:30:33 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 3.28ms 2020-07-24 03:30:33
2020-07-24 03:30:33,290 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:30:33
[I 200724 03:30:33 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:30:33
2020-07-24 03:30:33,292 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:30:33 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 79, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:30:33,348 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 64.51ms 2020-07-24 03:30:33
[E 200724 03:30:33 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 64.51ms 2020-07-24 03:30:33
2020-07-24 03:30:45,337 - tornado.access - INFO - 172.19.0.1 304 GET / (172.19.0.1) 32.51ms 2020-07-24 03:30:45
[I 200724 03:30:45 application:168] 172.19.0.1 304 GET / (172.19.0.1) 32.51ms 2020-07-24 03:30:45
2020-07-24 03:32:48,507 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.88ms 2020-07-24 03:32:48
[I 200724 03:32:48 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.88ms 2020-07-24 03:32:48
2020-07-24 03:32:48,509 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:32:48
[I 200724 03:32:48 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:32:48
2020-07-24 03:32:48,510 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:32:48 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:32:48,559 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 59.30ms 2020-07-24 03:32:48
[E 200724 03:32:48 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 59.30ms 2020-07-24 03:32:48
2020-07-24 03:33:34,642 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.70ms 2020-07-24 03:33:34
[I 200724 03:33:34 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 1.70ms 2020-07-24 03:33:34
2020-07-24 03:33:34,645 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:33:34
[I 200724 03:33:34 application:175] 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:33:34
2020-07-24 03:33:34,650 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 10.02ms 2020-07-24 03:33:34
[I 200724 03:33:34 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 10.02ms 2020-07-24 03:33:34
2020-07-24 03:33:56,386 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
    res = m.find_by_id(id)
  File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
    return self.session.query(self.__class__).get(id)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
    return self._get_impl(ident, loading.load_on_pk_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
    return db_load_fn(self, primary_key_identity)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
    return q.one()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3503, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3525, in _execute_and_instances
    querycontext, self._connection_from_session, close_with_result=True
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3540, in _get_bind_args
    mapper=self._bind_mapper(), clause=querycontext.statement, **kw
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3518, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1141, in connection
    execution_options=execution_options,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1147, in _connection_for_bind
    engine, execution_options
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 409, in _connection_for_bind
    self._assert_active()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
[E 200724 03:33:56 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 91, in update
        res = m.find_by_id(id)
      File "/workspace/scrat/models/sql/basemodel.py", line 480, in find_by_id
        return self.session.query(self.__class__).get(id)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1021, in get
        return self._get_impl(ident, loading.load_on_pk_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 1138, in _get_impl
        return db_load_fn(self, primary_key_identity)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/loading.py", line 287, in load_on_pk_identity
        return q.one()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3458, in one
        ret = self.one_or_none()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3427, in one_or_none
        ret = list(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3503, in __iter__
        return self._execute_and_instances(context)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3525, in _execute_and_instances
        querycontext, self._connection_from_session, close_with_result=True
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3540, in _get_bind_args
        mapper=self._bind_mapper(), clause=querycontext.statement, **kw
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/query.py", line 3518, in _connection_from_session
        conn = self.session.connection(**kw)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1141, in connection
        execution_options=execution_options,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1147, in _connection_for_bind
        engine, execution_options
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 409, in _connection_for_bind
        self._assert_active()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
2020-07-24 03:33:56,420 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 36.55ms 2020-07-24 03:33:56
[E 200724 03:33:56 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 36.55ms 2020-07-24 03:33:56
2020-07-24 03:34:13,310 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 2.67ms 2020-07-24 03:34:13
[I 200724 03:34:13 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 2.67ms 2020-07-24 03:34:13
2020-07-24 03:34:13,314 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:34:13
[I 200724 03:34:13 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:34:13
2020-07-24 03:34:13,317 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
    self._assert_active(prepared_ok=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:34:13 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
        self._assert_active(prepared_ok=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 85, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:34:13,377 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 69.53ms 2020-07-24 03:34:13
[E 200724 03:34:13 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 69.53ms 2020-07-24 03:34:13
2020-07-24 03:35:26,805 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:35:26 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:35:27,344 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:35:27,345 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:35:27,346 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:35:27,347 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:35:27,348 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:35:27,349 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:35:27,350 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:35:27,351 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:35:27,368 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:35:27,369 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:35:27,370 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:35:27,371 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:35:27,372 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:35:27,372 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:35:27,373 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:35:27,374 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:35:30,353 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.93ms 2020-07-24 03:35:30
[I 200724 03:35:30 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.93ms 2020-07-24 03:35:30
2020-07-24 03:35:30,356 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:35:30
[I 200724 03:35:30 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:35:30
2020-07-24 03:35:30,358 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:35:30 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:35:30,417 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 70.95ms 2020-07-24 03:35:30
[E 200724 03:35:30 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 70.95ms 2020-07-24 03:35:30
2020-07-24 03:35:37,509 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 2.00ms 2020-07-24 03:35:37
[I 200724 03:35:37 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 2.00ms 2020-07-24 03:35:37
2020-07-24 03:35:37,511 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:35:37
[I 200724 03:35:37 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:35:37
2020-07-24 03:35:37,513 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
    self._assert_active(prepared_ok=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:35:37 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
        self._assert_active(prepared_ok=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:35:37,547 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 39.76ms 2020-07-24 03:35:37
[E 200724 03:35:37 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 39.76ms 2020-07-24 03:35:37
2020-07-24 03:35:43,363 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:35:43 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:35:43,885 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:35:43,889 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:35:43,891 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:35:43,894 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:35:43,895 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:35:43,897 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:35:43,898 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:35:43,899 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:35:43,921 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:35:43,922 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:35:43,923 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:35:43,924 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:35:43,925 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:35:43,926 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:35:43,927 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:35:43,928 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:35:45,200 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.00ms 2020-07-24 03:35:45
[I 200724 03:35:45 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.00ms 2020-07-24 03:35:45
2020-07-24 03:35:45,203 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:35:45
[I 200724 03:35:45 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:35:45
2020-07-24 03:35:45,205 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:35:45 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 86, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:35:45,252 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 59.33ms 2020-07-24 03:35:45
[E 200724 03:35:45 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 59.33ms 2020-07-24 03:35:45
2020-07-24 03:36:03,914 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:36:03 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:36:04,443 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:36:04,445 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:36:04,446 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:36:04,447 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:36:04,448 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:36:04,449 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:36:04,450 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:36:04,450 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:36:04,464 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:36:04,465 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:36:04,466 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:36:04,467 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:36:04,467 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:36:04,468 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:36:04,469 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:36:04,470 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:36:05,672 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.54ms 2020-07-24 03:36:05
[I 200724 03:36:05 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 7.54ms 2020-07-24 03:36:05
2020-07-24 03:36:05,674 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:36:05
[I 200724 03:36:05 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:36:05
2020-07-24 03:36:05,676 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:36:05 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:36:05,737 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 72.95ms 2020-07-24 03:36:05
[E 200724 03:36:05 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 72.95ms 2020-07-24 03:36:05
2020-07-24 03:37:18,460 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:37:18 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:37:19,003 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:37:19,004 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:37:19,007 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:37:19,009 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:37:19,009 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:37:19,011 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:37:19,012 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:37:19,013 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:37:19,033 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:37:19,034 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:37:19,036 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:37:19,037 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:37:19,039 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:37:19,041 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:37:19,043 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:37:19,046 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:37:20,892 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.49ms 2020-07-24 03:37:20
[I 200724 03:37:20 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.49ms 2020-07-24 03:37:20
2020-07-24 03:37:20,895 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:37:20
[I 200724 03:37:20 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:37:20
2020-07-24 03:37:20,896 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:37:20 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:37:20,950 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 64.69ms 2020-07-24 03:37:20
[E 200724 03:37:20 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 64.69ms 2020-07-24 03:37:20
2020-07-24 03:37:23,046 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 1.79ms 2020-07-24 03:37:23
[I 200724 03:37:23 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 1.79ms 2020-07-24 03:37:23
2020-07-24 03:37:23,048 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:37:23
[I 200724 03:37:23 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a) 2020-07-24 03:37:23
2020-07-24 03:37:23,049 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
    self._assert_active(prepared_ok=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
    code="7s2a",
sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:37:23 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 502, in commit
        self._assert_active(prepared_ok=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 296, in _assert_active
        code="7s2a",
    sqlalchemy.exc.InvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) (Background on this error at: http://sqlalche.me/e/13/7s2a)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:37:23,083 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 39.22ms 2020-07-24 03:37:23
[E 200724 03:37:23 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 39.22ms 2020-07-24 03:37:23
2020-07-24 03:37:29,021 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:37:29 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:37:29,503 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:37:29,504 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:37:29,505 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:37:29,505 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:37:29,506 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:37:29,507 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:37:29,508 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:37:29,508 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:37:29,522 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:37:29,523 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:37:29,524 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:37:29,525 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:37:29,526 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:37:29,527 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:37:29,528 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:37:29,529 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:37:37,017 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:37:37 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:37:37,480 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:37:37,481 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:37:37,482 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:37:37,482 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:37:37,483 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:37:37,484 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:37:37,485 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:37:37,486 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:37:37,507 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:37:37,508 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:37:37,509 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:37:37,510 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:37:37,512 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:37:37,513 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:37:37,515 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:37:37,517 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:37:38,494 - tornado.general - INFO - /workspace/scrat/handlers/archivetbl.py modified; restarting server
[I 200724 03:37:38 autoreload:202] /workspace/scrat/handlers/archivetbl.py modified; restarting server
2020-07-24 03:37:39,085 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:37:39,087 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:37:39,088 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:37:39,090 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:37:39,091 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:37:39,092 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:37:39,094 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:37:39,096 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:37:39,125 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:37:39,126 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:37:39,128 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:37:39,130 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:37:39,131 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:37:39,133 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:37:39,135 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:37:39,138 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:37:40,062 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.67ms 2020-07-24 03:37:40
[I 200724 03:37:40 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 6.67ms 2020-07-24 03:37:40
2020-07-24 03:37:40,064 - tornado.access - INFO - 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:37:40
[I 200724 03:37:40 application:175] 127.0.0.1 200 base.error:archivetbl, error updating Nonemsg: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8) 2020-07-24 03:37:40
2020-07-24 03:37:40,065 - tornado.application - ERROR - Uncaught exception POST /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "powdb" does not exist


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
    m.upsert()
  File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
    self.session.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
    self.transaction.commit()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
    self._prepare_impl()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
    self.session.flush()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
    self._flush(objects)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
    transaction.rollback(_capture_exception=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
    flush_context.execute()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
    ) in _organize_states_for_save(base_mapper, states, uowtransaction):
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
    base_mapper, uowtransaction, states
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
    connection = uowtransaction.transaction.connection(base_mapper)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
    return self._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
    conn = self._parent._connection_for_bind(bind, execution_options)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
    e, dialect, self
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
    exc_value, with_traceback=exc_tb,
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
    raise exception
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist

(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:37:40 web:1792] Uncaught exception POST /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    psycopg2.OperationalError: FATAL:  database "powdb" does not exist
    
    
    The above exception was the direct cause of the following exception:
    
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 81, in create
        m.upsert()
      File "/workspace/scrat/models/sql/basemodel.py", line 393, in upsert
        self.session.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 1042, in commit
        self.transaction.commit()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 504, in commit
        self._prepare_impl()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 483, in _prepare_impl
        self.session.flush()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2523, in flush
        self._flush(objects)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2664, in _flush
        transaction.rollback(_capture_exception=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 2624, in _flush
        flush_context.execute()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
        rec.execute(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
        uow,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 213, in save_obj
        ) in _organize_states_for_save(base_mapper, states, uowtransaction):
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 374, in _organize_states_for_save
        base_mapper, uowtransaction, states
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/persistence.py", line 1602, in _connections_for_states
        connection = uowtransaction.transaction.connection(base_mapper)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 314, in connection
        return self._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 421, in _connection_for_bind
        conn = self._parent._connection_for_bind(bind, execution_options)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
        conn = bind._contextual_connect()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2305, in _contextual_connect
        self._wrap_pool_connect(self.pool.connect, None),
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2343, in _wrap_pool_connect
        e, dialect, self
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 1585, in _handle_dbapi_exception_noconnection
        sqlalchemy_exception, with_traceback=exc_info[2], from_=e
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
        return fn()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
        return _ConnectionFairy._checkout(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
        fairy = _ConnectionRecord.checkout(pool)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
        rec = pool._do_get()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
        self._dec_overflow()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
        return self._create_connection()
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
        return _ConnectionRecord(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
        self.__connect(first_connect_check=True)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
        pool.logger.debug("Error on connect(): %s", e)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/langhelpers.py", line 69, in __exit__
        exc_value, with_traceback=exc_tb,
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py", line 178, in raise_
        raise exception
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
        connection = pool._invoke_creator(self)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
        return dialect.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py", line 493, in connect
        return self.dbapi.connect(*cargs, **cparams)
      File "/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py", line 127, in connect
        conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  database "powdb" does not exist
    
    (Background on this error at: http://sqlalche.me/e/13/e3q8)
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:37:40,111 - tornado.access - ERROR - 127.0.0.1 500 POST /archivetbl (127.0.0.1) 55.79ms 2020-07-24 03:37:40
[E 200724 03:37:40 application:168] 127.0.0.1 500 POST /archivetbl (127.0.0.1) 55.79ms 2020-07-24 03:37:40
2020-07-24 03:38:02,610 - tornado.general - INFO - /workspace/scrat/conf/config.py modified; restarting server
[I 200724 03:38:02 autoreload:202] /workspace/scrat/conf/config.py modified; restarting server
2020-07-24 03:38:03,105 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:38:03,106 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:38:03,107 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:38:03,108 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:38:03,108 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:38:03,110 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:38:03,111 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:38:03,112 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:38:03,136 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:38:03,137 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:38:03,141 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:38:03,142 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:38:03,143 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:38:03,145 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:38:03,147 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:38:03,148 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:38:05,541 - sqlalchemy.engine.base.Engine - INFO - select version()
[I 200724 03:38:05 base:1235] select version()
2020-07-24 03:38:05,544 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:38:05 base:1240] {}
2020-07-24 03:38:05,548 - sqlalchemy.engine.base.Engine - INFO - select current_schema()
[I 200724 03:38:05 base:1235] select current_schema()
2020-07-24 03:38:05,550 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:38:05 base:1240] {}
2020-07-24 03:38:05,553 - sqlalchemy.engine.base.Engine - INFO - SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
[I 200724 03:38:05 base:1341] SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2020-07-24 03:38:05,554 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:38:05 base:1342] {}
2020-07-24 03:38:05,558 - sqlalchemy.engine.base.Engine - INFO - SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
[I 200724 03:38:05 base:1341] SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2020-07-24 03:38:05,560 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:38:05 base:1342] {}
2020-07-24 03:38:05,562 - sqlalchemy.engine.base.Engine - INFO - show standard_conforming_strings
[I 200724 03:38:05 base:1235] show standard_conforming_strings
2020-07-24 03:38:05,565 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:38:05 base:1240] {}
2020-07-24 03:38:05,570 - sqlalchemy.engine.base.Engine - INFO - BEGIN (implicit)
[I 200724 03:38:05 base:730] BEGIN (implicit)
2020-07-24 03:38:05,574 - sqlalchemy.engine.base.Engine - INFO - INSERT INTO archivetbls (created_at, last_updated, title, text, votes) VALUES (now(), now(), %(title)s, %(text)s, %(votes)s) RETURNING archivetbls.id
[I 200724 03:38:05 base:1235] INSERT INTO archivetbls (created_at, last_updated, title, text, votes) VALUES (now(), now(), %(title)s, %(text)s, %(votes)s) RETURNING archivetbls.id
2020-07-24 03:38:05,576 - sqlalchemy.engine.base.Engine - INFO - {'title': 'first archivetbl', 'text': '', 'votes': 0}
[I 200724 03:38:05 base:1240] {'title': 'first archivetbl', 'text': '', 'votes': 0}
2020-07-24 03:38:05,580 - sqlalchemy.engine.base.Engine - INFO - COMMIT
[I 200724 03:38:05 base:772] COMMIT
2020-07-24 03:38:05,586 - sqlalchemy.engine.base.Engine - INFO - BEGIN (implicit)
[I 200724 03:38:05 base:730] BEGIN (implicit)
2020-07-24 03:38:05,589 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id = %(param_1)s
[I 200724 03:38:05 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id = %(param_1)s
2020-07-24 03:38:05,591 - sqlalchemy.engine.base.Engine - INFO - {'param_1': 1}
[I 200724 03:38:05 base:1240] {'param_1': 1}
2020-07-24 03:38:05,595 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 63.15ms 2020-07-24 03:38:05
[I 200724 03:38:05 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 63.15ms 2020-07-24 03:38:05
2020-07-24 03:38:05,600 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, successfully created 1 2020-07-24 03:38:05
[I 200724 03:38:05 application:175] 127.0.0.1 200 base.success:archivetbl, successfully created 1 2020-07-24 03:38:05
2020-07-24 03:38:05,604 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 71.95ms 2020-07-24 03:38:05
[I 200724 03:38:05 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 71.95ms 2020-07-24 03:38:05
2020-07-24 03:38:17,288 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.06ms 2020-07-24 03:38:17
[I 200724 03:38:17 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 2.06ms 2020-07-24 03:38:17
2020-07-24 03:38:17,290 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:17
[I 200724 03:38:17 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:17
2020-07-24 03:38:17,293 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:38:17 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:38:17,334 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.26ms 2020-07-24 03:38:17
[E 200724 03:38:17 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 48.26ms 2020-07-24 03:38:17
2020-07-24 03:38:20,930 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.66ms 2020-07-24 03:38:20
[I 200724 03:38:20 application:168] 172.19.0.1 200 GET /archivetbl/new (172.19.0.1) 2.66ms 2020-07-24 03:38:20
2020-07-24 03:38:20,932 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:38:20
[I 200724 03:38:20 application:175] 172.19.0.1 200 base.success:archivetbl, new 2020-07-24 03:38:20
2020-07-24 03:38:20,965 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 37.64ms 2020-07-24 03:38:20
[I 200724 03:38:20 application:168] 172.19.0.1 304 GET /archivetbl/new (172.19.0.1) 37.64ms 2020-07-24 03:38:20
2020-07-24 03:38:21,605 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 11.37ms 2020-07-24 03:38:21
[I 200724 03:38:21 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 11.37ms 2020-07-24 03:38:21
2020-07-24 03:38:25,751 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 6.25ms 2020-07-24 03:38:25
[I 200724 03:38:25 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 6.25ms 2020-07-24 03:38:25
2020-07-24 03:38:25,753 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:25
[I 200724 03:38:25 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:25
2020-07-24 03:38:25,757 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:38:25 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:38:25,790 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 44.57ms 2020-07-24 03:38:25
[E 200724 03:38:25 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 44.57ms 2020-07-24 03:38:25
2020-07-24 03:38:59,306 - tornado.access - INFO - 172.19.0.1 200 POST /archivetbl (172.19.0.1) 1.94ms 2020-07-24 03:38:59
[I 200724 03:38:59 application:168] 172.19.0.1 200 POST /archivetbl (172.19.0.1) 1.94ms 2020-07-24 03:38:59
2020-07-24 03:38:59,309 - tornado.access - INFO - 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:59
[I 200724 03:38:59 application:175] 172.19.0.1 200 base.error:archivetbl, error updating Nonemsg: int() argument must be a string, a bytes-like object or a number, not 'NoneType' 2020-07-24 03:38:59
2020-07-24 03:38:59,312 - tornado.application - ERROR - Uncaught exception POST /archivetbl (172.19.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
Traceback (most recent call last):
  File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
    m.init_from_json(data_json, simple_conversion=True)
  File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
    return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
  File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
    d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
  File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
    raise e
  File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
    dct[elem] = int(dct[elem])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
    res = list(res)
TypeError: 'Archivetbl' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 206, in post
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
    data=m, format="json")
  File "/workspace/scrat/handlers/base.py", line 555, in error
    data = self.model.res_to_json(data)
  File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
    return res.to_json()
  File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
    return json.dumps(self.marshmallow_schema.dump(self).data)
AttributeError: 'dict' object has no attribute 'data'
[E 200724 03:38:59 web:1792] Uncaught exception POST /archivetbl (172.19.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='POST', uri='/archivetbl', version='HTTP/1.1', remote_ip='172.19.0.1')
    Traceback (most recent call last):
      File "/workspace/scrat/handlers/archivetbl.py", line 80, in create
        m.init_from_json(data_json, simple_conversion=True)
      File "/workspace/scrat/models/modelobject.py", line 346, in init_from_json
        return self.init_from_dict(d, ignore, simple_conversion=simple_conversion)
      File "/workspace/scrat/models/modelobject.py", line 273, in init_from_dict
        d=pow_init_from_dict_deserializer(d,self.schema, simple_conversion)
      File "/workspace/scrat/lib/decoders.py", line 73, in pow_init_from_dict_deserializer
        raise e
      File "/workspace/scrat/lib/decoders.py", line 68, in pow_init_from_dict_deserializer
        dct[elem] = int(dct[elem])
    TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/workspace/scrat/models/modelobject.py", line 455, in res_to_json
        res = list(res)
    TypeError: 'Archivetbl' object is not iterable
    
    During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 206, in post
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 87, in create
        data=m, format="json")
      File "/workspace/scrat/handlers/base.py", line 555, in error
        data = self.model.res_to_json(data)
      File "/workspace/scrat/models/modelobject.py", line 457, in res_to_json
        return res.to_json()
      File "/workspace/scrat/models/sql/basemodel.py", line 234, in to_json
        return json.dumps(self.marshmallow_schema.dump(self).data)
    AttributeError: 'dict' object has no attribute 'data'
2020-07-24 03:38:59,357 - tornado.access - ERROR - 172.19.0.1 500 POST /archivetbl (172.19.0.1) 52.56ms 2020-07-24 03:38:59
[E 200724 03:38:59 application:168] 172.19.0.1 500 POST /archivetbl (172.19.0.1) 52.56ms 2020-07-24 03:38:59
2020-07-24 03:39:36,296 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.24ms 2020-07-24 03:39:36
[I 200724 03:39:36 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.24ms 2020-07-24 03:39:36
2020-07-24 03:39:36,301 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:36
[I 200724 03:39:36 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:36
2020-07-24 03:39:36,327 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 03:39:36 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 03:39:36,332 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:39:36 base:1240] {}
2020-07-24 03:39:36,345 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 50.84ms 2020-07-24 03:39:36
[I 200724 03:39:36 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 50.84ms 2020-07-24 03:39:36
2020-07-24 03:39:38,434 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.97ms 2020-07-24 03:39:38
[I 200724 03:39:38 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.97ms 2020-07-24 03:39:38
2020-07-24 03:39:38,436 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:38
[I 200724 03:39:38 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:38
2020-07-24 03:39:38,460 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 03:39:38 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 03:39:38,462 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:39:38 base:1240] {}
2020-07-24 03:39:38,481 - tornado.access - INFO - 172.19.0.1 304 GET /archivetbl (172.19.0.1) 48.96ms 2020-07-24 03:39:38
[I 200724 03:39:38 application:168] 172.19.0.1 304 GET /archivetbl (172.19.0.1) 48.96ms 2020-07-24 03:39:38
2020-07-24 03:39:38,758 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 4.78ms 2020-07-24 03:39:38
[I 200724 03:39:38 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 4.78ms 2020-07-24 03:39:38
2020-07-24 03:39:42,538 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id = %(param_1)s
[I 200724 03:39:42 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id = %(param_1)s
2020-07-24 03:39:42,540 - sqlalchemy.engine.base.Engine - INFO - {'param_1': '1'}
[I 200724 03:39:42 base:1240] {'param_1': '1'}
2020-07-24 03:39:42,546 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/1/edit (172.19.0.1) 10.86ms 2020-07-24 03:39:42
[I 200724 03:39:42 application:168] 172.19.0.1 200 GET /archivetbl/1/edit (172.19.0.1) 10.86ms 2020-07-24 03:39:42
2020-07-24 03:39:42,547 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, edit id: 1 2020-07-24 03:39:42
[I 200724 03:39:42 application:175] 172.19.0.1 200 base.success:archivetbl, edit id: 1 2020-07-24 03:39:42
2020-07-24 03:39:42,583 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl/1/edit (172.19.0.1) 47.81ms 2020-07-24 03:39:42
[I 200724 03:39:42 application:168] 172.19.0.1 200 GET /archivetbl/1/edit (172.19.0.1) 47.81ms 2020-07-24 03:39:42
2020-07-24 03:39:45,822 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id = %(param_1)s
[I 200724 03:39:45 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id = %(param_1)s
2020-07-24 03:39:45,824 - sqlalchemy.engine.base.Engine - INFO - {'param_1': '1'}
[I 200724 03:39:45 base:1240] {'param_1': '1'}
2020-07-24 03:39:45,829 - sqlalchemy.engine.base.Engine - INFO - UPDATE archivetbls SET last_updated=now(), text=%(text)s WHERE archivetbls.id = %(archivetbls_id)s
[I 200724 03:39:45 base:1235] UPDATE archivetbls SET last_updated=now(), text=%(text)s WHERE archivetbls.id = %(archivetbls_id)s
2020-07-24 03:39:45,831 - sqlalchemy.engine.base.Engine - INFO - {'text': 'xxx', 'archivetbls_id': 1}
[I 200724 03:39:45 base:1240] {'text': 'xxx', 'archivetbls_id': 1}
2020-07-24 03:39:45,834 - sqlalchemy.engine.base.Engine - INFO - COMMIT
[I 200724 03:39:45 base:772] COMMIT
2020-07-24 03:39:45,840 - sqlalchemy.engine.base.Engine - INFO - BEGIN (implicit)
[I 200724 03:39:45 base:730] BEGIN (implicit)
2020-07-24 03:39:45,842 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id = %(param_1)s
[I 200724 03:39:45 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id = %(param_1)s
2020-07-24 03:39:45,844 - sqlalchemy.engine.base.Engine - INFO - {'param_1': 1}
[I 200724 03:39:45 base:1240] {'param_1': 1}
2020-07-24 03:39:45,847 - tornado.access - INFO - 172.19.0.1 200 PUT /archivetbl/1 (172.19.0.1) 28.73ms 2020-07-24 03:39:45
[I 200724 03:39:45 application:168] 172.19.0.1 200 PUT /archivetbl/1 (172.19.0.1) 28.73ms 2020-07-24 03:39:45
2020-07-24 03:39:45,849 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, successfully updated 1 2020-07-24 03:39:45
[I 200724 03:39:45 application:175] 172.19.0.1 200 base.success:archivetbl, successfully updated 1 2020-07-24 03:39:45
2020-07-24 03:39:45,851 - tornado.access - INFO - 172.19.0.1 200 PUT /archivetbl/1 (172.19.0.1) 32.76ms 2020-07-24 03:39:45
[I 200724 03:39:45 application:168] 172.19.0.1 200 PUT /archivetbl/1 (172.19.0.1) 32.76ms 2020-07-24 03:39:45
2020-07-24 03:39:59,070 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.90ms 2020-07-24 03:39:59
[I 200724 03:39:59 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 1.90ms 2020-07-24 03:39:59
2020-07-24 03:39:59,074 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:59
[I 200724 03:39:59 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:39:59
2020-07-24 03:39:59,100 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 03:39:59 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 03:39:59,102 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:39:59 base:1240] {}
2020-07-24 03:39:59,118 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 49.22ms 2020-07-24 03:39:59
[I 200724 03:39:59 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 49.22ms 2020-07-24 03:39:59
2020-07-24 03:40:30,149 - sqlalchemy.engine.base.Engine - INFO - INSERT INTO archivetbls (created_at, last_updated, title, text, votes) VALUES (now(), now(), %(title)s, %(text)s, %(votes)s) RETURNING archivetbls.id
[I 200724 03:40:30 base:1235] INSERT INTO archivetbls (created_at, last_updated, title, text, votes) VALUES (now(), now(), %(title)s, %(text)s, %(votes)s) RETURNING archivetbls.id
2020-07-24 03:40:30,151 - sqlalchemy.engine.base.Engine - INFO - {'title': 'first archivetbl', 'text': '', 'votes': 0}
[I 200724 03:40:30 base:1240] {'title': 'first archivetbl', 'text': '', 'votes': 0}
2020-07-24 03:40:30,153 - sqlalchemy.engine.base.Engine - INFO - COMMIT
[I 200724 03:40:30 base:772] COMMIT
2020-07-24 03:40:30,157 - sqlalchemy.engine.base.Engine - INFO - BEGIN (implicit)
[I 200724 03:40:30 base:730] BEGIN (implicit)
2020-07-24 03:40:30,159 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id = %(param_1)s
[I 200724 03:40:30 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id = %(param_1)s
2020-07-24 03:40:30,160 - sqlalchemy.engine.base.Engine - INFO - {'param_1': 2}
[I 200724 03:40:30 base:1240] {'param_1': 2}
2020-07-24 03:40:30,163 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 16.32ms 2020-07-24 03:40:30
[I 200724 03:40:30 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 16.32ms 2020-07-24 03:40:30
2020-07-24 03:40:30,164 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, successfully created 2 2020-07-24 03:40:30
[I 200724 03:40:30 application:175] 127.0.0.1 200 base.success:archivetbl, successfully created 2 2020-07-24 03:40:30
2020-07-24 03:40:30,166 - tornado.access - INFO - 127.0.0.1 200 POST /archivetbl (127.0.0.1) 19.25ms 2020-07-24 03:40:30
[I 200724 03:40:30 application:168] 127.0.0.1 200 POST /archivetbl (127.0.0.1) 19.25ms 2020-07-24 03:40:30
2020-07-24 03:40:36,358 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.02ms 2020-07-24 03:40:36
[I 200724 03:40:36 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 2.02ms 2020-07-24 03:40:36
2020-07-24 03:40:36,360 - tornado.access - INFO - 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:40:36
[I 200724 03:40:36 application:175] 172.19.0.1 200 base.success:archivetbl, index 2020-07-24 03:40:36
2020-07-24 03:40:36,385 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 03:40:36 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 03:40:36,387 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:40:36 base:1240] {}
2020-07-24 03:40:36,400 - tornado.access - INFO - 172.19.0.1 200 GET /archivetbl (172.19.0.1) 44.01ms 2020-07-24 03:40:36
[I 200724 03:40:36 application:168] 172.19.0.1 200 GET /archivetbl (172.19.0.1) 44.01ms 2020-07-24 03:40:36
2020-07-24 03:40:37,027 - tornado.access - INFO - 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.59ms 2020-07-24 03:40:37
[I 200724 03:40:37 application:168] 172.19.0.1 200 GET /static/images/pow_favicon-16x16.png?v=095570cdf218f6f4ce5593422602aff5 (172.19.0.1) 8.59ms 2020-07-24 03:40:37
2020-07-24 03:41:35,098 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls 
WHERE archivetbls.id IS NULL
[I 200724 03:41:35 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls 
    WHERE archivetbls.id IS NULL
2020-07-24 03:41:35,101 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:41:35 base:1240] {}
2020-07-24 03:41:35,104 - tornado.application - ERROR - Uncaught exception PUT /archivetbl (127.0.0.1)
HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "/workspace/scrat/handlers/base.py", line 246, in put
    return f(*args, **params)
  File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
    return method(self, *args, **kwargs)
  File "/workspace/scrat/handlers/archivetbl.py", line 94, in update
    res.init_from_json(data_json, simple_conversion=True)
AttributeError: 'NoneType' object has no attribute 'init_from_json'
[E 200724 03:41:35 web:1792] Uncaught exception PUT /archivetbl (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8080', method='PUT', uri='/archivetbl', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 1701, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/workspace/scrat/handlers/base.py", line 246, in put
        return f(*args, **params)
      File "/usr/local/lib/python3.7/dist-packages/tornado/web.py", line 3178, in wrapper
        return method(self, *args, **kwargs)
      File "/workspace/scrat/handlers/archivetbl.py", line 94, in update
        res.init_from_json(data_json, simple_conversion=True)
    AttributeError: 'NoneType' object has no attribute 'init_from_json'
2020-07-24 03:41:35,131 - tornado.access - ERROR - 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 35.50ms 2020-07-24 03:41:35
[E 200724 03:41:35 application:168] 127.0.0.1 500 PUT /archivetbl (127.0.0.1) 35.50ms 2020-07-24 03:41:35
2020-07-24 03:42:51,936 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 2.79ms 2020-07-24 03:42:51
[I 200724 03:42:51 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 2.79ms 2020-07-24 03:42:51
2020-07-24 03:42:51,939 - tornado.access - INFO - 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:42:51
[I 200724 03:42:51 application:175] 127.0.0.1 200 base.success:archivetbl, index 2020-07-24 03:42:51
2020-07-24 03:42:51,941 - sqlalchemy.engine.base.Engine - INFO - SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
FROM archivetbls
[I 200724 03:42:51 base:1235] SELECT archivetbls.id AS archivetbls_id, archivetbls.created_at AS archivetbls_created_at, archivetbls.last_updated AS archivetbls_last_updated, archivetbls.title AS archivetbls_title, archivetbls.text AS archivetbls_text, archivetbls.votes AS archivetbls_votes 
    FROM archivetbls
2020-07-24 03:42:51,943 - sqlalchemy.engine.base.Engine - INFO - {}
[I 200724 03:42:51 base:1240] {}
2020-07-24 03:42:51,951 - tornado.access - INFO - 127.0.0.1 200 GET /archivetbl (127.0.0.1) 17.04ms 2020-07-24 03:42:51
[I 200724 03:42:51 application:168] 127.0.0.1 200 GET /archivetbl (127.0.0.1) 17.04ms 2020-07-24 03:42:51
2020-07-24 03:43:49,128 - tornado.general - INFO - /workspace/scrat/models/sql/archivetbl.py modified; restarting server
[I 200724 03:43:49 autoreload:202] /workspace/scrat/models/sql/archivetbl.py modified; restarting server
2020-07-24 03:43:49,658 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:43:49,665 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:43:49,666 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:43:49,667 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:43:49,668 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:43:49,669 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:43:49,671 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:43:49,672 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:43:49,691 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:43:49,692 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:43:49,694 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:43:49,695 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:43:49,697 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:43:49,698 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:43:49,699 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:43:49,701 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:44:02,685 - tornado.general - INFO - /workspace/scrat/models/sql/archivetbl.py modified; restarting server
[I 200724 03:44:02 autoreload:202] /workspace/scrat/models/sql/archivetbl.py modified; restarting server
2020-07-24 03:44:03,746 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:44:03,748 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:44:03,749 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:44:03,751 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:44:03,752 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:44:03,754 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:44:03,756 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:44:03,757 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:44:03,794 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:44:03,823 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:44:03,824 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:44:03,826 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:44:03,827 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:44:03,830 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:44:03,832 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:44:03,832 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text1
2020-07-24 03:44:03,834 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:44:03,837 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:44:06,305 - tornado.general - INFO - /workspace/scrat/models/sql/archivetbl.py modified; restarting server
[I 200724 03:44:06 autoreload:202] /workspace/scrat/models/sql/archivetbl.py modified; restarting server
2020-07-24 03:44:06,923 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:44:06,924 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:44:06,926 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:44:06,927 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:44:06,933 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:44:06,940 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:44:06,941 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text, Column)
2020-07-24 03:44:06,942 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:44:06,943 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:44:06,980 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:44:06,983 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:44:06,989 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:44:06,990 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:44:06,991 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:44:06,992 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text
2020-07-24 03:44:06,993 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text2
2020-07-24 03:44:06,994 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:44:06,995 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:44:10,956 - tornado.general - INFO - /workspace/scrat/models/sql/archivetbl.py modified; restarting server
[I 200724 03:44:10 autoreload:202] /workspace/scrat/models/sql/archivetbl.py modified; restarting server
2020-07-24 03:44:11,555 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:44:11,557 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:44:11,559 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:44:11,561 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:44:11,562 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:44:11,564 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:44:11,565 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:44:11,566 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:44:11,568 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:44:11,599 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() started
2020-07-24 03:44:11,601 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop id
2020-07-24 03:44:11,604 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop created_at
2020-07-24 03:44:11,605 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop last_updated
2020-07-24 03:44:11,608 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop title
2020-07-24 03:44:11,623 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text1
2020-07-24 03:44:11,624 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop text2
2020-07-24 03:44:11,626 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) initialize prop votes
2020-07-24 03:44:11,627 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _post_configure_properties() complete
2020-07-24 03:44:19,010 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:44:19,011 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:44:19,012 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:44:19,012 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:44:19,013 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:44:19,014 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:44:19,015 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:44:19,020 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:44:19,021 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:44:19,047 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:44:19,053 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:44:19,075 - alembic.runtime.migration - INFO - Running upgrade 23e7419d6e13 -> 5c1de05e9881, added a archivetable model
2020-07-24 03:44:39,771 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:44:39,773 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:44:39,773 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:44:39,774 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:44:39,777 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:44:39,778 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:44:39,779 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:44:39,780 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:44:39,783 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:44:39,810 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:44:39,813 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:44:39,827 - alembic.runtime.migration - INFO - Running downgrade 5c1de05e9881 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:45:08,309 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:45:08,310 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:45:08,311 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:45:08,312 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:45:08,313 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:45:08,314 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:45:08,314 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:45:08,315 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:45:08,316 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:45:08,343 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:45:08,346 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:45:12,132 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:45:12,133 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:45:12,134 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:45:12,134 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:45:12,135 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:45:12,136 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:45:12,137 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:45:12,138 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:45:12,139 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:45:12,162 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:45:12,165 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:45:12,179 - alembic.runtime.migration - INFO - Running upgrade 23e7419d6e13 -> 5c1de05e9881, added a archivetable model
2020-07-24 03:45:14,531 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:45:14,532 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:45:14,533 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:45:14,533 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:45:14,534 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:45:14,535 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:45:14,536 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:45:14,537 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:45:14,538 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:45:14,562 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:45:14,565 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:45:14,598 - alembic.ddl.postgresql - INFO - Detected sequence named 'archivetbls_id_seq' as owned by integer column 'archivetbls(id)', assuming SERIAL and omitting
2020-07-24 03:45:14,610 - alembic.autogenerate.compare - INFO - Detected added column 'archivetbls.text1'
2020-07-24 03:45:14,611 - alembic.autogenerate.compare - INFO - Detected added column 'archivetbls.text2'
2020-07-24 03:45:14,612 - alembic.autogenerate.compare - INFO - Detected removed column 'archivetbls.text'
2020-07-24 03:45:44,731 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:45:44,732 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:45:44,733 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:45:44,734 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:45:44,735 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:45:44,736 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:45:44,736 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:45:44,737 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:45:44,738 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:45:44,764 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:45:44,766 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:45:44,781 - alembic.runtime.migration - INFO - Running downgrade 5c1de05e9881 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:45:55,249 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:45:55,250 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:45:55,251 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:45:55,252 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:45:55,253 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:45:55,254 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:45:55,255 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:45:55,257 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:45:55,258 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:45:55,287 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:45:55,290 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:45:55,308 - alembic.runtime.migration - INFO - Running upgrade 23e7419d6e13 -> 5c1de05e9881, added a archivetable model
2020-07-24 03:46:26,554 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:46:26,555 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:46:26,555 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:46:26,556 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:46:26,557 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:46:26,558 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:46:26,559 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:46:26,559 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:46:26,560 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:46:26,585 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:46:26,587 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:46:26,602 - alembic.runtime.migration - INFO - Running upgrade 5c1de05e9881 -> 2e7f67bb55aa, added a archivetable model2
2020-07-24 03:46:31,870 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:46:31,871 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:46:31,872 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:46:31,873 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:46:31,873 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:46:31,874 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:46:31,875 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:46:31,876 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:46:31,876 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:46:31,908 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:46:31,911 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:46:31,928 - alembic.runtime.migration - INFO - Running downgrade 5c1de05e9881 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:46:34,320 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:46:34,321 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:46:34,322 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:46:34,322 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:46:34,323 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:46:34,324 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:46:34,325 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:46:34,326 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:46:34,327 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:46:34,352 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:46:34,355 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:46:34,373 - alembic.runtime.migration - INFO - Running upgrade 23e7419d6e13 -> 5c1de05e9881, added a archivetable model
2020-07-24 03:47:13,266 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:13,267 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:13,268 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:13,269 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:13,270 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:13,271 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:13,271 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:13,272 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:13,273 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:13,301 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:13,304 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:15,727 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:15,729 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:15,730 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:15,731 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:15,732 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:15,733 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:15,734 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:15,735 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:15,736 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:15,764 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:15,770 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:23,296 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:23,297 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:23,297 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:23,298 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:23,299 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:23,300 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:23,301 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:23,301 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:23,302 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:23,326 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:23,328 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:23,344 - alembic.runtime.migration - INFO - Running upgrade 5c1de05e9881 -> 2e7f67bb55aa, added a archivetable model2
2020-07-24 03:47:27,024 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:27,025 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:27,027 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:27,027 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:27,028 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:27,028 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:27,029 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:27,030 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:27,030 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:27,054 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:27,055 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:27,068 - alembic.runtime.migration - INFO - Running downgrade 5c1de05e9881 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:47:29,912 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:29,913 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:29,913 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:29,914 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:29,915 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:29,915 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:29,916 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:29,917 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:29,917 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:29,942 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:29,944 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:34,092 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:34,093 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:34,094 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:34,095 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:34,095 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:34,096 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:34,096 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:34,097 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:34,098 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:34,123 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:34,125 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:34,138 - alembic.runtime.migration - INFO - Running downgrade 23e7419d6e13 -> 32c6d424eb31, added a archivetable model
2020-07-24 03:47:38,100 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:38,101 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:38,102 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:38,102 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:38,103 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:38,104 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:38,105 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:38,105 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:38,106 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:38,131 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:38,134 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:38,150 - alembic.runtime.migration - INFO - Running upgrade 32c6d424eb31 -> 23e7419d6e13, added a archivetable model
2020-07-24 03:47:40,873 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:40,874 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:40,874 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:40,877 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:40,878 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:40,878 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:40,879 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:40,880 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:40,881 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:40,907 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:40,909 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:51,689 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(id, Column)
2020-07-24 03:47:51,690 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(created_at, Column)
2020-07-24 03:47:51,691 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(last_updated, Column)
2020-07-24 03:47:51,692 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) Identified primary key columns: ColumnSet([Column('id', Integer(), table=<archivetbls>, primary_key=True, nullable=False)])
2020-07-24 03:47:51,693 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) constructed
2020-07-24 03:47:51,695 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(title, Column)
2020-07-24 03:47:51,696 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text1, Column)
2020-07-24 03:47:51,697 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(text2, Column)
2020-07-24 03:47:51,698 - sqlalchemy.orm.mapper.Mapper - INFO - (Archivetbl|archivetbls) _configure_property(votes, Column)
2020-07-24 03:47:51,726 - alembic.runtime.migration - INFO - Context impl PostgresqlImpl.
2020-07-24 03:47:51,729 - alembic.runtime.migration - INFO - Will assume transactional DDL.
2020-07-24 03:47:51,747 - alembic.runtime.migration - INFO - Running downgrade 23e7419d6e13 -> 32c6d424eb31, added a archivetable model
